{"version":3,"file":"static/js/538.d562cac8.chunk.js","mappings":"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","sources":["components/TrendingListMovie/TrendingList.styled.js","components/TrendingListMovie/TrendingListMovie.jsx","pages/Home.jsx","services/MovieServices.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MoviesList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 26px;\r\n  justify-content: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  font-size: 20px;\r\n  padding: 0 10px;\r\n`;\r\n\r\nexport const ImgMovie = styled.img`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  width: 300px;\r\n`;\r\nexport const Container = styled.div`\r\n   max-width: 1280px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    margin: o auto;\r\n    margin: 0 auto;\r\n\r\n`;","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { MoviesList } from './TrendingList.styled';\r\nimport { MovieTitle, ImgMovie, Item } from './TrendingList.styled';\r\n\r\nconst TrendingListMovie = ({ movies }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <MoviesList>\r\n      {movies.map(({ title, id, images }) => (\r\n        <Item key={id}>\r\n          <Link to={`/movies/${id}`} state={{ from: location }}>\r\n            <ImgMovie width={300} src={images} alt={title} />\r\n            <MovieTitle>{title}</MovieTitle>\r\n          </Link>\r\n        </Item>\r\n      ))}\r\n    </MoviesList>\r\n  );\r\n};\r\n\r\nTrendingListMovie.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      id: PropTypes.number.isRequired,\r\n      images: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TrendingListMovie;","import { useState, useEffect } from 'react';\r\n\r\nimport MovieServices from '../services/MovieServices';\r\nimport TrendingListMovie from '../components/TrendingListMovie/TrendingListMovie';\r\nimport { Container } from '../components/TrendingListMovie/TrendingList.styled';\r\n\r\nconst Home = () => {\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const movieServices = new MovieServices();\r\n\r\n  useEffect(() => {\r\n    onRequest();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = async () => {\r\n    try {\r\n      const res = await movieServices.getTrendingMovies();\r\n\r\n      setTrendingMovies(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Container>\r\n        <h1 style={{ marginBottom: '20px' }}>Trending today</h1>\r\n        <TrendingListMovie movies={trendingMovies} />\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nclass MovieServices {\r\n  API_KEY = '8dbbaf50b58201a2d3381e6f92e0ca1f';\r\n  BASE_URL = 'https://api.themoviedb.org/3/';\r\n  BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\r\n\r\n  getTrendingMovies = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}trending/movie/day?api_key=${this.API_KEY}`\r\n      );\r\n\r\n      return this._transformTrendingMovies(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  getMovieDetalis = async id => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}movie/${id}?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n\r\n      return this._transformMovieDetalis(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  getCastOrReviewsMovie = async (id, categorie) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}movie/${id}/${categorie}?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n      if (categorie === 'credits') {\r\n        return this._transformCastMovie(res.data.cast);\r\n      }\r\n      if (categorie === 'reviews') {\r\n        if (!res.data.results.length) {\r\n          return null;\r\n        } else {\r\n          return this._transformReviewsMovie(res.data.results);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  getMovieSearch = async query => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}search/movie?api_key=${this.API_KEY}&language=en-US&include_adult=false&query=${query}`\r\n      );\r\n\r\n      return this._transformMovie(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  _transformMovie = movies => {\r\n    return movies.map(({ id, title, poster_path }) => {\r\n      if (!poster_path) {\r\n        return {\r\n          title,\r\n          image: null,\r\n          id,\r\n        };\r\n      }\r\n      return {\r\n        id,\r\n        title,\r\n        image: `${this.BASE_URL_IMG}${poster_path}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  _transformMovieDetalis = ({\r\n    title,\r\n    poster_path,\r\n    overview,\r\n    genres,\r\n    vote_average,\r\n  }) => {\r\n    if (!poster_path) {\r\n      return {\r\n        title,\r\n        image: null,\r\n        overview,\r\n        genres,\r\n        userScore: vote_average,\r\n      };\r\n    }\r\n    return {\r\n      title,\r\n      image: `${this.BASE_URL_IMG}${poster_path}`,\r\n      overview,\r\n      genres,\r\n      userScore: vote_average,\r\n    };\r\n  };\r\n\r\n  _transformCastMovie = cast => {\r\n    return cast.map(({ character, name, profile_path, id }) => {\r\n      if (!profile_path) {\r\n        return {\r\n          character,\r\n          name,\r\n          id,\r\n          image: null,\r\n        };\r\n      }\r\n      return {\r\n        character,\r\n        name,\r\n        id,\r\n        image: `${this.BASE_URL_IMG}${profile_path}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  _transformReviewsMovie = reviews => {\r\n    return reviews.map(({ author, id, content }) => {\r\n      return { author, id, content };\r\n    });\r\n  };\r\n\r\n  _transformTrendingMovies = movies => {\r\n    return movies.map(({ id, title, poster_path }) => {\r\n      return {\r\n        id,\r\n        title,\r\n        images: `${this.BASE_URL_IMG}${poster_path}`,\r\n      };\r\n    });\r\n  };\r\n}\r\n\r\nexport default MovieServices;"],"names":["MoviesList","styled","ul","_templateObject","_taggedTemplateLiteral","MovieTitle","p","_templateObject2","ImgMovie","img","_templateObject3","Item","li","_templateObject4","Container","div","_templateObject5","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","id","images","_jsxs","Link","to","concat","state","from","width","src","alt","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","movieServices","MovieServices","useEffect","onRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","getTrendingMovies","sent","t0","console","log","stop","apply","arguments","style","marginBottom","TrendingListMovie","_createClass","_this","_classCallCheck","API_KEY","BASE_URL","BASE_URL_IMG","axios","get","abrupt","_transformTrendingMovies","data","results","getMovieDetalis","_callee2","_context2","_transformMovieDetalis","_x","getCastOrReviewsMovie","_ref3","_callee3","categorie","_context3","_transformCastMovie","cast","length","_transformReviewsMovie","_x2","_x3","getMovieSearch","_ref4","_callee4","query","_context4","_transformMovie","_x4","_ref5","poster_path","image","_ref6","overview","genres","vote_average","userScore","_ref7","character","name","profile_path","reviews","_ref8","author","content","_ref9"],"sourceRoot":""}