{"version":3,"file":"static/js/962.0df926a1.chunk.js","mappings":"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","sources":["components/CastMovie/CastMovie.styled.js","components/CastMovie/CastMovie.jsx","services/MovieServices.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CastList = styled.ul`\r\ndisplay: flex;\r\n    flex-wrap: wrap;\r\n    gap: 30px;\r\n    text-align: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const CastItem = styled.li`\r\n  flex-basis: calc((100% - 60px) / 6);\r\n  width: 129px;\r\n  height: 246px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #f6f6f6;\r\n`;\r\n\r\nexport const WrapperContent = styled.div`\r\n  padding: 8px 10px;\r\n`;\r\n\r\nexport const ImgCast = styled.img`\r\n  margin: 0 auto;\r\nbackground-size: cover;\r\nbackground-position: center;\r\n`;","import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport MovieServices from '../../services/MovieServices.js';\r\nimport {\r\n  CastList,\r\n  CastItem,\r\n  WrapperContent,\r\n  ImgCast,\r\n} from './CastMovie.styled';\r\n\r\nimport noImg from '../../img/no_image_available.jpg';\r\n\r\nconst CastMovie = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  const movieServices = new MovieServices();\r\n\r\n  useEffect(() => {\r\n    onRequest(movieId);\r\n  }, []);\r\n\r\n  const onRequest = async id => {\r\n    try {\r\n      const res = await movieServices.getCastOrReviewsMovie(id, 'credits');\r\n      setCast(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CastList>\r\n        {cast.map(({ image, name, character, id }) => {\r\n          return (\r\n            <CastItem key={id}>\r\n              {image ? (\r\n                <ImgCast width={150} src={image} alt={name} />\r\n              ) : (\r\n                <ImgCast width={150} src={noImg} alt=\"not found img\" />\r\n              )}\r\n              <WrapperContent>\r\n                <p>{name}</p>\r\n                <p>{character}</p>\r\n              </WrapperContent>\r\n            </CastItem>\r\n          );\r\n        })}\r\n      </CastList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastMovie;","import axios from 'axios';\r\n\r\nclass MovieServices {\r\n  API_KEY = '8dbbaf50b58201a2d3381e6f92e0ca1f';\r\n  BASE_URL = 'https://api.themoviedb.org/3/';\r\n  BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\r\n\r\n  getTrendingMovies = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}trending/movie/day?api_key=${this.API_KEY}`\r\n      );\r\n\r\n      return this._transformTrendingMovies(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  getMovieDetalis = async id => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}movie/${id}?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n\r\n      return this._transformMovieDetalis(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  getCastOrReviewsMovie = async (id, categorie) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}movie/${id}/${categorie}?api_key=${this.API_KEY}&language=en-US`\r\n      );\r\n      if (categorie === 'credits') {\r\n        return this._transformCastMovie(res.data.cast);\r\n      }\r\n      if (categorie === 'reviews') {\r\n        if (!res.data.results.length) {\r\n          return null;\r\n        } else {\r\n          return this._transformReviewsMovie(res.data.results);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  getMovieSearch = async query => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${this.BASE_URL}search/movie?api_key=${this.API_KEY}&language=en-US&include_adult=false&query=${query}`\r\n      );\r\n\r\n      return this._transformMovie(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  _transformMovie = movies => {\r\n    return movies.map(({ id, title, poster_path }) => {\r\n      if (!poster_path) {\r\n        return {\r\n          title,\r\n          image: null,\r\n          id,\r\n        };\r\n      }\r\n      return {\r\n        id,\r\n        title,\r\n        image: `${this.BASE_URL_IMG}${poster_path}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  _transformMovieDetalis = ({\r\n    title,\r\n    poster_path,\r\n    overview,\r\n    genres,\r\n    vote_average,\r\n  }) => {\r\n    if (!poster_path) {\r\n      return {\r\n        title,\r\n        image: null,\r\n        overview,\r\n        genres,\r\n        userScore: vote_average,\r\n      };\r\n    }\r\n    return {\r\n      title,\r\n      image: `${this.BASE_URL_IMG}${poster_path}`,\r\n      overview,\r\n      genres,\r\n      userScore: vote_average,\r\n    };\r\n  };\r\n\r\n  _transformCastMovie = cast => {\r\n    return cast.map(({ character, name, profile_path, id }) => {\r\n      if (!profile_path) {\r\n        return {\r\n          character,\r\n          name,\r\n          id,\r\n          image: null,\r\n        };\r\n      }\r\n      return {\r\n        character,\r\n        name,\r\n        id,\r\n        image: `${this.BASE_URL_IMG}${profile_path}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  _transformReviewsMovie = reviews => {\r\n    return reviews.map(({ author, id, content }) => {\r\n      return { author, id, content };\r\n    });\r\n  };\r\n\r\n  _transformTrendingMovies = movies => {\r\n    return movies.map(({ id, title, poster_path }) => {\r\n      return {\r\n        id,\r\n        title,\r\n        images: `${this.BASE_URL_IMG}${poster_path}`,\r\n      };\r\n    });\r\n  };\r\n}\r\n\r\nexport default MovieServices;"],"names":["CastList","styled","ul","_templateObject","_taggedTemplateLiteral","CastItem","li","_templateObject2","WrapperContent","div","_templateObject3","ImgCast","img","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieServices","MovieServices","useEffect","onRequest","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","res","wrap","_context","prev","next","getCastOrReviewsMovie","sent","t0","console","log","stop","_x","apply","arguments","_jsx","children","map","_ref2","image","name","character","_jsxs","width","src","alt","noImg","_createClass","_this","_classCallCheck","API_KEY","BASE_URL","BASE_URL_IMG","getTrendingMovies","axios","get","concat","abrupt","_transformTrendingMovies","data","results","getMovieDetalis","_callee2","_context2","_transformMovieDetalis","_ref3","_callee3","categorie","_context3","_transformCastMovie","length","_transformReviewsMovie","_x2","_x3","getMovieSearch","_ref4","_callee4","query","_context4","_transformMovie","_x4","movies","_ref5","title","poster_path","_ref6","overview","genres","vote_average","userScore","_ref7","profile_path","reviews","_ref8","author","content","_ref9","images"],"sourceRoot":""}